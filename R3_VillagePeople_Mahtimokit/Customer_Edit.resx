<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button5.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        F2tQWrhrzKJoAAAAAElFTkSuQmCC
</value>
  </data>
</root>